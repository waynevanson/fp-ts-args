name: main

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    strategy:
      fail-fast: true
      matrix:
        node: [14, 16]
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-${{ matrix.node-version }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-yarn-

      - name: Install
        run: yarn install --prefer-offline

      - name: Type Check
        run: yarn typecheck

      - name: Test
        run: yarn test

      - name: Documentation
        run: yarn docs-ts

      - name: Upload Documentation Artifact
        # Generate documentation only once, only for main
        if: ${{ github.ref == 'refs/heads/main' && matrix.node == '16' && matrix.os == 'ubuntu-latest' }}
        uses: actions/upload-artifact@v2
        with:
          name: docs
          path: docs/
          retention-days: 1

  release:
    runs-on: ubuntu-latest
    needs: [test]
    if: ${{ success() && github.ref == 'refs/heads/main' }}
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            yarn-

      - name: Install
        run: yarn install --prefer-offline

      - name: Release via semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: yarn semantic-release

  docs:
    runs-on: ubuntu-latest
    needs: [test, release]
    if: ${{ (needs.release.result == 'skipped' || needs.release.result == 'success' ) && github.ref == 'refs/heads/main' }}
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            yarn-

      - name: Install
        run: yarn install --prefer-offline

      - name: Documentation - Remove Previous
        run: rm -rf docs

      - name: Documentation - Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: docs
          path: docs

      - name: Documentation Upload
        uses: EndBug/add-and-commit@v7 # You can change this to use a specific version.
        with:
          add: --force docs
          message: "docs: generate documentation [skip ci]"
          # The way the action should handle pathspec errors from the add and remove commands. Three options are available:
          # - ignore -> errors will be logged but the step won't fail
          # - exitImmediately -> the action will stop right away, and the step will fail
          # - exitAtEnd -> the action will go on, every pathspec error will be logged at the end, the step will fail.
          # Default: ignore
          pathspec_error_handling: exitAtEnd
